#!/usr/bin/env node

var shell = require('shelljs');
var helpers = require('./helpers');
var crypto = require('crypto');

function checksum(filename, assignment, rootChecksum) {
  if(assignment) {
    var assignmentConfig = shell.cat('exercises/' + assignment + '/' + filename).toString();
    var assignmentChecksum = crypto.createHash('md5').update(assignmentConfig).digest("hex");
    if(assignmentChecksum !== rootChecksum) {
      shell.echo(filename + ' did not match for ' + assignment);
      shell.exit(1);
    }
  }
}

function checkSumAll(filename, rootFileName = filename) {
  shell.echo('\nChecking integrity of ' + filename + '...');

  var config = shell.cat(rootFileName).toString();
  var rootChecksum = crypto.createHash('md5').update(config).digest("hex");
  var assignment = shell.env['ASSIGNMENT'];
  var assignments = helpers.assignments;

  if(assignment) {
    checksum(filename, assignment, rootChecksum);
  }
  else {
    for(i = 0; i < assignments.length; i++) {
      checksum(filename, assignments[i], rootChecksum);
    }
  }
}

helpers.createExercisePackageJson();
checkSumAll('package.json', 'exercise-package.json');
shell.rm('exercise-package.json');

checkSumAll('.eslintrc');
checkSumAll('babel.config.js');
