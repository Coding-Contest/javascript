#!/usr/bin/env node

const shell = require('shelljs');
const helpers = require('./helpers');
const crypto = require('crypto');

const sha = str => crypto.createHash('md5').update(str).digest("hex");

function checksum(filename, assignment, rootChecksum) {
  if(!assignment) { return; }

  const assignmentConfig = shell.cat(['exercises', assignment, filename].join('/')).toString();
  const assignmentChecksum = sha(assignmentConfig);

  if(assignmentChecksum !== rootChecksum) {
    shell.echo(filename + ' did not match for ' + assignment);
    shell.exit(1);
  }
}

function checkSumAll(filename, rootFileName = filename) {
  shell.echo('\nChecking integrity of ' + filename + '...');

  const config = shell.cat(rootFileName).toString();
  const rootChecksum = sha(config);
  const assignment = shell.env['ASSIGNMENT'];

  if(assignment) {
    checksum(filename, assignment, rootChecksum);
  }
  else {
    helpers.assignments.forEach(assignment => checksum(filename, assignment, rootChecksum));
  }
}

helpers.createExercisePackageJson();
checkSumAll('package.json', 'exercise-package.json');
shell.rm('exercise-package.json');

checkSumAll('.eslintrc');
checkSumAll('babel.config.js');
