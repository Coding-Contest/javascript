#!/usr/bin/env node

var shell = require('shelljs');
var helpers = require('./helpers');
var crypto = require('crypto');

function sha(str) {
  return crypto.createHash('md5').update(str).digest("hex");
}

function checksum(filename, assignment, rootChecksum) {
  if(!assignment) { return; }

  var assignmentConfig = shell.cat(['exercises', assignment, filename].join('/')).toString();
  var assignmentChecksum = sha(assignmentConfig);
  if(assignmentChecksum !== rootChecksum) {
    shell.echo(filename + ' did not match for ' + assignment);
    shell.exit(1);
  }
}

function checkSumAll(filename, rootFileName = filename) {
  shell.echo('\nChecking integrity of ' + filename + '...');

  var config = shell.cat(rootFileName).toString();
  var rootChecksum = sha(config);
  var assignment = shell.env['ASSIGNMENT'];
  var assignments = helpers.assignments;

  if(assignment) {
    checksum(filename, assignment, rootChecksum);
  }
  else {
    for(i = 0; i < assignments.length; i++) {
      checksum(filename, assignments[i], rootChecksum);
    }
  }
}

helpers.createExercisePackageJson();
checkSumAll('package.json', 'exercise-package.json');
shell.rm('exercise-package.json');

checkSumAll('.eslintrc');
checkSumAll('babel.config.js');
