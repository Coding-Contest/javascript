#!/usr/bin/env node

/**
 * Run this script (from root directory): npx @babel/node scripts/sync
 *
 * This script is used to propagate any change to root package.json to
 * all exercises and keep them in sync.
 * There is a CI step which checks that package.json in root & exercises match
 * (see checksum script for more info).
 */

const shell = require('shelljs');
const assignment = shell.env['ASSIGNMENT'];
const helpers = require('./helpers');

function copyConfigForAssignment(assignment) {
  const destination = 'exercises/' + assignment;
  const assignmentPackageFilename = destination + '/package.json';
  const assignmentVersion = getAssignmentVersion(assignmentPackageFilename);
  helpers.createExercisePackageJson(assignmentVersion);
  shell.cat('exercise-package.json').to(assignmentPackageFilename);
  shell.rm('exercise-package.json');

  shell.cp('babel.config.js', destination);
  shell.cp('.eslintrc', destination);
}

function getAssignmentVersion(assignmentPackageFilename) {
  const packageFile = shell.cat(assignmentPackageFilename).toString();
  const packageJson = JSON.parse(packageFile);
  console.debug(packageJson)
  return packageJson['version'];
}

if(assignment) {
  shell.echo('Syncing ' + assignment + '...');
  copyConfig('exercises/' + assignment);
}
else {
  shell.echo('Syncing all assignments...');
  helpers.assignments.forEach(copyConfigForAssignment);
}
